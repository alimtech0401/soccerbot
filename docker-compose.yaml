version: "3.3"

# Setup instructions
# --------------------
# curl -s -L https://nvidia.github.io/nvidia-container-runtime/gpgkey | sudo apt-key add -
# distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
# curl -s -L https://nvidia.github.io/nvidia-container-runtime/$distribution/nvidia-container-runtime.list | sudo tee /etc/apt/sources.list.d/nvidia-container-runtime.list
# sudo apt-get update
# sudo apt-get install -y nvidia-container-runtime nvidia-container-toolkit mesa-utils
# sudo systemctl restart docker

# Running instructions
# Run xhost +local:docker everytime before running docker-compose up
# A. First build or pull the images using docker-compose build or docker-compose pull
# B1. To run regular xhost +local:docker && docker-compose up
# B2. To run just simulation xhost +local:docker && docker-compose up simulator


# Note: You never need to build the images a second time as all the code is mounted
# Note: To run the full game run docker-compose -f docker-compose.full.yaml up
# Note: To run a one on one run docker-compose up

# Tips and tricks

# docker ps - list all of the docker containers that are running
# docker image ls - list all of the docker images that are built
# docker rm $(docker ps -aq) - Remove all not running docker containers
# docker stop $(docker ps -aq) - Stop all not running docker containers
# docker system prune --all - Delete all docker images
# docker exec -it <docker image id> bash - SSH into a docker image to see whats going on inside it

# docker-compose build - Build all docker images
# docker-compose pull - Takes images from dockerhub
# docker-compose push - Push all docker
# docker-compose up - Start the containers specified in this file

x-soccerbot: &soccerbot
  image: utrarobosoccer/soccerbot
  privileged: true
  build:
    context: .
    target: builder
  network_mode: host
  cap_add:
    - SYS_PTRACE
  pid: "host"
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: all
            capabilities: [ gpu, compute, utility, graphics ]
  command: /bin/bash -c "source ~/catkin_ws/devel/setup.bash &&
    if [[ ! -z "$${ROS_MASTER}" ]] && [[ $${ROS_MASTER} == "true" ]]; then
    roslaunch soccerbot soccerbot.launch __ns:=robot$$ROBOCUP_ROBOT_ID || sleep infinity; else
    roslaunch --wait soccerbot soccerbot.launch __ns:=robot$$ROBOCUP_ROBOT_ID || sleep infinity; fi"
  volumes:
    - /home/${USER}/catkin_ws/:/root/catkin_ws/
    - /home/${USER}/catkin_ws/:/home/${USER}/catkin_ws/
    - /tmp/.X11-unix:/tmp/.X11-unix:rw
    - /dev/dri:/dev/dri:rw
    - /dev/snd:/dev/snd:rw

services:

  simulator:
    image: utrarobosoccer/webots
    privileged: true
    build:
      context: external
    network_mode: host
    cap_add:
      - SYS_PTRACE
    pid: "host"
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all
            capabilities: [gpu, compute, utility, graphics]
    command: bash -c "cd webots && WEBOTS_HOME=/root/webots ./webots --no-sandbox ./projects/samples/contests/robocup/worlds/robocup.wbt"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /dev/dri:/dev/dri:rw
      - /dev/snd:/dev/snd:rw
      - ./external/webots/projects/samples/contests/robocup/controllers/referee/team_1_single.json:/root/webots/projects/samples/contests/robocup/controllers/referee/team_1.json:rw
      - ./external/webots/projects/samples/contests/robocup/controllers/referee/team_2_single.json:/root/webots/projects/samples/contests/robocup/controllers/referee/team_2.json:rw
      - ./external/webots/projects/samples/contests/robocup/protos/:/root/webots/projects/samples/contests/robocup/protos/:rw
    environment:
      DISPLAY: unix$DISPLAY
      WEBOTS_HOME: /root/webots
      JAVA_HOME: /usr
      GAME_CONTROLLER_HOME: /root/GameController
      XDG_RUNTIME_DIR: $XDG_RUNTIME_DIR

  friendly:
    <<: *soccerbot
    environment:
      ROS_MASTER: "true"
      X_POS: 4
      Y_POS: -3.14
      YAW: 1.57
      ROBOCUP_ROBOT_ID: 1
      ROBOCUP_TEAM_COLOR: "red"
      ROBOCUP_SIMULATOR_ADDR: "127.0.0.1:10001"
      ROBOCUP_MIRROR_SERVER_IP: 0.0.0.0
      ROBOCUP_GAMECONTROLLER_IP: 0.0.0.0
      TEAM_ID: 16
      ENABLE_PYBULLET: "false"
      COMPETITION: "true"
      PYTHONUNBUFFERED: 1

  friendly2:
    <<: *soccerbot
    environment:
      X_POS: 1
      Y_POS: -3.15
      YAW: 1.57
      ROBOCUP_ROBOT_ID: 2
      ROBOCUP_TEAM_ID: 16
      ROBOCUP_TEAM_COLOR: "red"
      ROBOCUP_SIMULATOR_ADDR: "127.0.0.1:10002"
      ROBOCUP_GAMECONTROLLER_IP: "0.0.0.0"
      ROBOCUP_MIRROR_SERVER_IP: "0.0.0.0"
      COMPETITION: "true"
      PYTHONUNBUFFERED: 1

#  opponent:
#    <<: *soccerbot
#    environment:
#      X_POS: -4
#      Y_POS: -3.14
#      YAW: 1.57
#      ROBOCUP_TEAM_ID: 16
#      ROBOCUP_ROBOT_ID: 1
#      ROBOCUP_TEAM_COLOR: "blue"
#      ROBOCUP_SIMULATOR_ADDR: 127.0.0.1:10021
#      COMPETITION: "true"
#      PYTHONUNBUFFERED: 1
